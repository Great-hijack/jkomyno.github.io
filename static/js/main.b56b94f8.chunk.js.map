{"version":3,"sources":["components/AnimatedWrapper/AnimatedWrapper.tsx","context/info/index.ts","layouts/Content/Content.tsx","components/Link/Link.tsx","components/Text/Description.tsx","components/Text/Overview.tsx","components/Text/SubTitle.tsx","components/Text/Title.tsx","helpers/helpers.ts","layouts/Footer/Footer.tsx","layouts/Header/Header.tsx","components/LayoutShell/GithubLogo.tsx","components/LayoutShell/Logo.tsx","components/LayoutShell/LayoutShell.tsx","components/Column/Column.tsx","components/ActionButton/ActionButton.tsx","components/Matrix/Matrix.tsx","components/Section/Section.tsx","pages/Hero/Hero.tsx","pages/About/About.tsx","pages/Profiles/Profiles.tsx","pages/Skills/Skills.tsx","containers/App.tsx","registerServiceWorker.ts","index.tsx"],"names":["AnimatedWrapper","children","React","map","child","index","classNameNotInView","classNameInView","InfoContext","undefined","Content","className","Link","fillEffect","label","newTab","onClick","url","cx","href","aria-label","rel","target","defaultProps","Description","big","spaceBottom","Overview","SubTitle","code","Title","center","buildEmailAddress","author","provider","prefix","split","join","toLowerCase","Footer","techStack","joinedTechStackElements","arr","separator","and","last","length","joinedArrWithoutLast","reduce","acc","curr","concat","slice","spacedAnd","pop","joinAnd","techName","key","Header","ExternalElement","Logo","externalUrl","GithubLogo","color","viewBox","aria-hidden","width","height","fillRule","d","fill","textAnchor","fontWeight","fontSize","fontFamily","LayoutShell","headerElement","BrandElement","HeaderComponent","Consumer","context","repository","Portal","ReactDOM","authorUrl","Column","ArrowRight","stroke","id","strokeWidth","strokeLinecap","strokeLinejoin","strokeMiterlimit","ActionButton","message","renderColumn","char","renderRow","columns","Matrix","sentence","Section","hideTitle","section","Hero","AuthorInfoComponent","nickname","ActionButtonComponent","resumeUrl","onResumeDownloaded","Opportunities","email","opportunities","drop","new","About","links","androidiani","brainwise","skydreamer","autoencoders","experience","authorEmail","Profiles","renderLink","link","platformTitle","renderLinks","props","renderedLinks","this","Skills","renderLeftSkills","leftSkills","leftSkill","renderRightSkills","rightSkills","rightSkill","ReactGA","App","Provider","value","info","profileLinks","action","category","document","getElementById","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","URL","process","toString","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"mZAcaA,G,MAAoC,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAUlD,OACE,gCACGC,WAAeC,IAAuCF,GAXhD,SAACG,EAAyBC,GAA1B,OACT,gBAAC,IAAD,CACEC,mBAAmB,eACnBC,gBAAgB,iCAEfH,SCNMI,EAA8CN,qBADXO,GCPnCC,EAA4B,SAAC,GAAD,IAAGT,EAAH,EAAGA,SAAH,OACvC,uBAAKU,UAAU,8BACZV,I,wBCWQW,G,MAAyB,SAAC,GAAD,IAAGX,EAAH,EAAGA,SAAUU,EAAb,EAAaA,UAAWE,EAAxB,EAAwBA,WAAYC,EAApC,EAAoCA,MAAOC,EAA3C,EAA2CA,OAAQC,EAAnD,EAAmDA,QAASC,EAA5D,EAA4DA,IAA5D,OACpC,qBACEN,UAAWO,IAAGP,EAAW,CAAE,WAAYI,GAAUF,IACjDM,KAAMF,EACNG,aAAYN,EACZO,IAAKN,EAAU,sBAAwB,GACvCO,OAAQP,EAAU,SAAW,GAC7BC,QAASA,GAGNF,IAAUb,EACTa,EACAb,KAKRW,EAAKW,aAAe,CAClBZ,UAAW,GACXE,YAAY,EACZI,IAAK,KC1BA,IAAMO,EAAgC,SAAC,GAAD,IAAGC,EAAH,EAAGA,IAAKxB,EAAR,EAAQA,SAAUyB,EAAlB,EAAkBA,YAAlB,OAC3C,qBAAGf,UAAWO,IAAG,GAAI,CACjB,qCAAsCO,EACtC,sCAAuCA,EACvC,uBAAwC,UAAhBC,KAGzBzB,IAILuB,EAAYD,aAAe,CACzBE,KAAK,GChBA,IAAME,EAA6B,SAAC,GAAD,IAAG1B,EAAH,EAAGA,SAAH,OACxC,qBAAGU,UAAU,SACVV,ICIQ2B,EAA6B,SAAC,GAAD,IAAGH,EAAH,EAAGA,IAAKI,EAAR,EAAQA,KAAM5B,EAAd,EAAcA,SAAd,OACxC,sBAAIU,UAAWO,IAAG,WAAY,CACxB,UAAWW,EACX,qCAAsCJ,EACtC,sCAAuCA,KAG1CxB,IAIL2B,EAASL,aAAe,CACtBE,KAAK,EACLI,MAAM,GCbD,IAAMC,EAA0B,SAAC,GAAD,IAAGL,EAAH,EAAGA,IAAKM,EAAR,EAAQA,OAAQ9B,EAAhB,EAAgBA,SAAhB,OACrC,sBAAIU,UAAWO,IAAG,QAAS,CACvB,oBAAqBa,EACrB,qCAAsCN,EACtC,sCAAuCA,KAGxCxB,ICsBE,SAAS+B,EAAkBC,EAAgBC,GAChD,IAAMC,EAASF,EAAOG,MAAM,KAAKC,KAAK,KAAKC,cAE3C,MAAM,GAAN,OAAUH,EAAV,YAAoBD,GDrBtBJ,EAAMP,aAAe,CACnBE,KAAK,EACLM,QAAQ,G,UEhBGQ,EAA2B,SAAC,GAAgC,IAA9BN,EAA6B,EAA7BA,OAAQO,EAAqB,EAArBA,UAAWvB,EAAU,EAAVA,IAIvDwB,EDQA,SAAoBC,GAA2D,IAAjDC,EAAgD,uDAApC,KAAMC,EAA8B,uDAAxB,MACrDC,EAAOH,EAAII,OAAS,EAEpBC,EArBD,SAAiBL,GAA6C,IAAnCC,EAAkC,uDAAtB,IAC5C,OACED,EAAIM,QAAO,SAACC,EAAKC,GAGf,OAFAD,EAAMA,EAAIE,OAAO,CAACD,EAAMP,MAGvB,IAewBN,CADNK,EAAIU,MAAM,EAAGP,GACcF,GAC5CU,EAAS,WAAOT,EAAP,KAGf,OAFAG,EAAqBO,MAEdP,EAAqBI,OAAO,CACjCE,EACAX,EAAIG,KCjByBU,CAHNf,EAAWrC,KAAI,SAACqD,GAAD,OACxC,0BAAQC,IAAKD,GAAWA,MAEkC,KAAM,OAEjE,OACE,0BAAQ7C,UAAU,UAClB,uBAAKA,UAAU,6BACd,gBAAC,EAAD,MAGG,gBAHH,mBAIM8B,GAJN,CAKG,OACA,gBAAC,EAAD,CACCgB,IAAKxB,EACLlB,QAAM,EACNE,IAAKA,EACLH,MAAOmB,OAKX,gBAAC,EAAD,0BC1BSyB,G,MAA2B,SAAC,GAAD,IAAGC,EAAH,EAAGA,gBAAiBC,EAApB,EAAoBA,KAAMC,EAA1B,EAA0BA,YAA1B,OACtC,uBAAKlD,UAAU,4CACb,uBAAKA,UAAU,sBACb,uBAAKA,UAAU,gBACb,gBAAC,EAAD,CACEA,UAAU,cACVG,MAAM,cAEL8C,IAGL,uBAAKjD,UAAU,sBACb,uBAAKA,UAAU,iCACb,gBAAC,EAAD,CACEI,QAAM,EACNJ,UAAU,cACVG,MAAM,qBACNG,IAAK4C,GAEJF,SCvBAG,EAA+B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OAC1C,uBACEpD,UAAU,cACVoD,MAAOA,EACPC,QAAQ,YACRC,cAAY,OACZC,MAAM,MACNC,OAAO,OAEP,wBACEC,SAAS,UACTC,EAAE,ikBCXKT,EAAyB,SAAC,GAAD,IAAGG,EAAH,EAAGA,MAAH,OACpC,uBAAKpD,UAAU,OAAOqD,QAAQ,kBAC5B,wBAAMM,KAAK,cAAcD,EAAE,qBAC3B,yBACE,qBAAGE,WAAW,UACZ,qBAAGC,WAAY,IAAKC,SAAU,GAAIC,WAAW,uBAC3C,wBAAMJ,KAAMP,EAAOM,EAAE,wwGCClBM,EAAgC,SAAC,GAAwC,IAAtC1E,EAAqC,EAArCA,SAAU8D,EAA2B,EAA3BA,MAAOa,EAAoB,EAApBA,cACzDC,EAAe,gBAAC,EAAD,CAAMd,MAAOA,IAC5BJ,EACJ,wBAAMhD,UAAU,QACd,gBAAC,EAAD,CAAYoD,MAAM,aAoBhBe,EACJ,gBAACtE,EAAYuE,SAAb,MAjBmB,SAACC,GAAD,OACnB,gBAAC,EAAD,CACEpB,KAAMiB,EACNlB,gBAAiBA,EACjBE,YAAamB,EAAQC,gBAiBnBC,EAASC,eAAsBL,EAAiBF,GAEtD,OACE,gCACGM,EACD,gBAAC,EAAD,KACGjF,GAEH,gBAACO,EAAYuE,SAAb,MArBiB,SAAC,GAAD,IAAG9C,EAAH,EAAGA,OAAQmD,EAAX,EAAWA,UAAW5C,EAAtB,EAAsBA,UAAtB,OACnB,gBAAC,EAAD,CACEP,OAAQA,EACRhB,IAAKmE,EACL5C,UAAWA,SC1BJ6C,EAA2B,SAAC,GAAD,IAAGpF,EAAH,EAAGA,SAAUU,EAAb,EAAaA,UAAb,OACtC,uBAAKA,UAAS,iBAAYA,IACvBV,IAILoF,EAAO9D,aAAe,CACpBZ,UAAW,I,UCTA2E,EAA4B,kBACvC,uBACEtB,QAAQ,gBACRE,MAAM,OAEN,qBAAGqB,OAAO,SACR,wBACEC,GAAG,aACHlB,KAAK,OACLmB,YAAa,GACbpB,EAAE,4BACFqB,cAAc,QACdC,eAAe,UAEjB,wBACEH,GAAG,aACHI,iBAAkB,EAClBvB,EAAE,4DAYGwB,EAAiC,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAS9E,EAAZ,EAAYA,QAASC,EAArB,EAAqBA,IAArB,OAC5C,gBAAC,EAAD,KACE,uBAAKN,UAAU,iDACb,gBAAC,EAAD,CACEA,UAAU,kDACVE,YAAY,EACZC,MAAOgF,EACP9E,QAASA,EACTC,IAAKA,GAEJ6E,EAPH,IAOY,gBAAC,EAAD,U,QCxCZC,G,MAAe,SAACC,GAAD,OACnB,wBACEvC,IAAKuC,EACLrF,UAAU,iBAETqF,KAICC,EAAY,SAACC,GAAD,OAChB,uBAAKvF,UAAU,iFACZuF,IASQC,EAA2B,SAAC,GAAD,IAAGD,EAAH,EAAGA,QAASE,EAAZ,EAAYA,SAAZ,OACtC,uBAAKzF,UAAU,mBACb,uBAAKA,UAAU,+BACb,gBAAC,IAAD,CACEyF,SAAUA,EACVF,QAASA,EACTH,aAAcA,EACdE,UAAWA,OCrBNI,EAA4B,SAAC,GAAD,IAAGpG,EAAH,EAAGA,SAAUU,EAAb,EAAaA,UAAW2F,EAAxB,EAAwBA,UAAWC,EAAnC,EAAmCA,QAAnC,OACvC,2BAAS5F,UAAS,iBAAYA,EAAS,WAAOA,GAAc,KAC1D,uBAAKA,UAAU,cACX2F,GAAaC,GAAW,gBAAC,EAAD,KAAQA,GACjCtG,KAKPoG,EAAQ9E,aAAe,CACrBZ,UAAW,GACX2F,WAAW,GCdN,IAAME,EAAsB,WACjC,IAcMC,EACJ,gBAACjG,EAAYuE,SAAb,MARuB,SAAC,GAAD,IAAG9C,EAAH,EAAGA,OAAQyE,EAAX,EAAWA,SAAX,OACvB,gCACE,gBAAC,EAAD,CAAOjF,KAAG,GAAEQ,GACZ,gBAAC,EAAD,CAAUJ,MAAI,GAAd,cAAuB6E,EAAvB,YAkBEC,EACJ,gBAACnG,EAAYuE,SAAb,MATyB,SAAC,GAAD,IAAG6B,EAAH,EAAGA,UAAWC,EAAd,EAAcA,mBAAd,OACzB,gBAAC,EAAD,CACEf,QAAQ,gBACR9E,QAAS6F,EACT5F,IAAK2F,OAUT,OACE,gBAAC,EAAD,CAASN,WAAS,EAACC,QAAQ,OAAO5F,UAAU,QAC1C,uBAAKA,UAAU,qBACb,gBAAC,EAAD,CAAUc,KAAG,GArCP,kBAsCLgF,EACD,gBAAC,EAAD,KAtCQ,cAwCV,gBAAC,EAAD,CACEP,QAAS,EACTE,SAzCU,sBA2CZ,gBAAC,EAAD,CAAOrE,QAAQ,GAzCN,2GA0CR4E,IChDMG,EAA8C,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACtDC,EAAgB,CACpBC,KAAK,cACLF,MAAO,gBAAC,EAAD,CAAMhG,QAAM,EAACD,MAAM,QAAQG,IAAG,iBAAY8F,KACjDG,IAAI,0BAGN,OACE,gBAAC,EAAD,KAAcF,EAAcC,KAA5B,IAAmCD,EAAcD,MAAjD,IAAyDC,EAAcE,MAI9DC,EAAuB,WAClC,IAAMC,EAAQ,CACZC,YAAa,gBAAC,EAAD,CAAMtG,QAAM,EAACD,MAAM,cAAcG,IAAI,+BAClDqG,UAAW,gBAAC,EAAD,CAAMvG,QAAM,EAACD,MAAM,YAAYG,IAAI,yBAC9CsG,WAAY,gBAAC,EAAD,CAAMxG,QAAM,EAACD,MAAM,aAAaG,IAAI,uDAChDuG,aAAc,gBAAC,EAAD,CAAMzG,QAAM,EAACD,MAAM,6BACjBG,IAAI,+EAGhBwG,EACG,qBADHA,EAEG,sDAeT,OACE,gBAAC,EAAD,CAASlB,QAAQ,QAAQ5F,UAAU,SACjC,gBAAC,EAAD,CAAae,YAAY,SAflB,yKAgBP,gBAAC,EAAD,KAbM,wJAcN,gBAAC,EAAD,CAAaA,YAAY,SACtB+F,EADH,KACwBL,EAAMG,WAD9B,KAC4CH,EAAMC,YADlD,KACiEI,EADjE,KACsFL,EAAME,UAD5F,MAIA,gBAAC,EAAD,KAfI,wHAeJ,IACQF,EAAMI,aADd,IAC6B,KAG7B,2BACA,gBAAChH,EAAYuE,SAAb,MAjBwB,SAAC,GAAD,IAAG2C,EAAH,EAAGA,YAAH,OAC1B,gBAAC,EAAD,CAAeX,MAAOW,SC3BbC,EAAb,2MAaUC,WAAa,gBAAGC,EAAH,EAAGA,KAAMlH,EAAT,EAASA,UAAWmH,EAApB,EAAoBA,cAApB,OACnB,gBAAC,EAAD,CACE/G,QAAQ,EACRD,MAAOgH,EACP7G,IAAK4G,EACLpE,IAAKqE,EACLnH,UAAS,gEAA2DA,IAEnEmH,IArBP,EAyBUC,YAAc,kBACpB,EAAKC,MAAMZ,MAAMjH,IAAI,EAAKyH,aA1B9B,wEAEI,IAAMK,EAAgBC,KAAKH,cAE3B,OACE,gBAAC,EAAD,CAASxB,QAAQ,WAAW5F,UAAU,YACpC,uBAAKA,UAAU,uBACZsH,QAPX,GAA8B/H,iBCLjBiI,G,MAAb,2MACEC,iBAAmB,kBACjB,EAAKJ,MAAMK,WAAWlI,KAAI,SAAAmI,GAAS,OACjC,uBAAK7E,IAAK6E,EAAW3H,UAAU,uCAC7B,uBAAKA,UAAU,aAAa2H,GAC5B,uBAAK3H,UAAU,cALvB,EAUE4H,kBAAoB,kBAClB,EAAKP,MAAMQ,YAAYrI,KAAI,SAAAsI,GAAU,OACnC,uBAAKhF,IAAKgF,EAAY9H,UAAU,uCAC9B,uBAAKA,UAAU,SACf,uBAAKA,UAAU,cAAc8H,QAdrC,wEAoBI,OACE,gBAAC,EAAD,CAASlC,QAAQ,SAAS5F,UAAU,UAClC,uBAAKA,UAAU,QACb,uBAAKA,UAAU,gBACZuH,KAAKE,mBACLF,KAAKK,2BAzBlB,GAA4BrI,kBCA5BwI,IAAmB,kBAEZ,IAAMC,EAAb,4LAGID,IAAiB,WAHrB,+BAOI,OACE,gBAAClI,EAAYoI,SAAb,CAAsBC,MAAOX,KAAKY,MAChC,gBAAC,EAAD,CAAa/E,MAAM,UAAUa,cAAesD,KAAKtD,eAC/C,gBAAC,EAAD,KACE,gBAAC,EAAD,MACA,gBAAC,EAAD,MACA,gBAAC,EAAD,CACEyD,WAAYH,KAAKG,WACjBG,YAAaN,KAAKM,eAGtB,gBAAC,EAAD,CAAUpB,MAAOc,KAAKa,mBAlBhC,2CAyBIL,IAAc,CACZM,OAAQ,oBACRC,SAAU,gBA3BhB,oCAgCI,OAAOC,SAASC,eAAe,iBAhCnC,2BAoCI,IAEM/D,EAAS,6BADE,WAEXH,EAAU,UAAMG,EAAN,sBACVwB,EAAS,UAAM3B,EAAN,2CAEf,MAAO,CACLhD,OAPa,mBAQbyF,YAAa1F,EARA,mBAQ0B,aACvCoD,YACAsB,SATe,UAUfG,mBAAoBqB,KAAKrB,mBACzB5B,aACA2B,YACApE,UAAW,CACT,UACA,QACA,WArDR,iCA2DI,MAAO,CACL,UACA,SACA,aACA,UACA,eAhEN,kCAqEI,MAAO,CACL,SACA,QACA,MACA,MACA,YA1EN,mCA+EI,MAAO,CACL,CACE7B,UAAW,SACXkH,KAAM,6BACNC,cAAe,UAEjB,CACEnH,UAAW,SACXkH,KAAM,uCACNC,cAAe,UAEjB,CACEnH,UAAW,gBACXkH,KAAM,2DACNC,cAAe,iBAEjB,CACEnH,UAAW,WACXkH,KAAM,0DACNC,cAAe,YAEjB,CACEnH,UAAW,MACXkH,KAAM,iCACNC,cAAe,OAEjB,CACEnH,UAAW,UACXkH,KAAM,6BACNC,cAAe,gBA5GvB,GAAyB5H,iBCAnBkJ,G,MAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,4DAyCN,SAASC,EAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACTI,MAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WAClCD,IACFA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfT,UAAUC,cAAcS,WAK1BC,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,6CAOvBC,OAAM,SAAAC,GACLH,QAAQG,MAAM,4CAA6CA,MC/EjEvF,SACE,gBAAC,EAAD,MACA+D,SAASC,eAAe,SDaX,WACb,GAA6C,kBAAmBS,UAAW,CAMzE,GAJkB,IAAIe,IACpBC,GACAtB,OAAOC,SAASsB,YAEJC,SAAWxB,OAAOC,SAASuB,OAIvC,OAGFxB,OAAOyB,iBAAiB,QAAQ,WAC9B,IAAMpB,EAAK,UAAMiB,GAAN,sBAEPxB,IAmDV,SAAiCO,GAE/BqB,MAAMrB,GACHI,MAAK,SAAAkB,GAGkB,MAApBA,EAASC,SACwD,IAAjED,EAASE,QAAQC,IAAI,gBAAiBC,QAAQ,cAG9CzB,UAAUC,cAAcyB,MAAMvB,MAAK,SAAAC,GACjCA,EAAauB,aAAaxB,MAAK,WAC7BT,OAAOC,SAASiC,eAKpB9B,EAAgBC,MAGnBc,OAAM,WACLF,QAAQC,IACN,oEAvEAiB,CAAwB9B,GAIxBC,UAAUC,cAAcyB,MAAMvB,MAAK,WACjCQ,QAAQC,IACN,gHAMJd,EAAgBC,OC1CxB+B,K","file":"static/js/main.b56b94f8.chunk.js","sourcesContent":["import * as React from 'react';\n// @ts-ignore (I should add types to `react-inview-monitor`)\nimport InViewMonitor from 'react-inview-monitor';\nimport './AnimatedWrapper.css';\n\ninterface Props {\n  children: React.ReactChild[];\n}\n\n/**\n * Whenever the user scrolls into the view of any child component, for each of them,\n * the same animation is applied. The chosen animation is `fade-in-up`,\n * borrowed from `https://github.com/daneden/animate.css`.\n */\nexport const AnimatedWrapper: React.SFC<Props> = ({ children }) => {\n  const fn = (child: React.ReactChild, index: number): React.ReactNode => (\n    <InViewMonitor\n      classNameNotInView=\"is-invisible\"\n      classNameInView=\"width-100 animated fade-in-up\"\n    >\n      {child}\n    </InViewMonitor>\n  );\n\n  return (\n    <>\n      {React.Children.map<React.ReactNode, React.ReactChild>(children, fn)}\n    </>\n  );\n};\n","import * as React from 'react';\n\nexport interface InfoContextType {\n\tauthor: string;\n\tauthorEmail: string;\n\tauthorUrl: string;\n\tnickname: string;\n\tonResumeDownloaded: () => void;\n\trepository: string;\n\tresumeUrl: string;\n  techStack: string[];\n};\n\nlet defaultValue: InfoContextType | undefined = undefined;\nexport const InfoContext: React.Context<InfoContextType> = React.createContext(defaultValue!);\n","import * as React from 'react';\n\ninterface Props {\n  children: React.ReactNode;\n};\n\nexport const Content: React.SFC<Props> = ({ children }) => (\n  <div className=\"container content is-fluid\">\n    {children}\n  </div>\n);\n","import cx from 'classnames';\nimport * as React from 'react';\nimport './Link.css';\n\ninterface Props {\n  children?: React.ReactNode;\n  className?: string;\n  fillEffect?: boolean;\n  label: string;\n  newTab?: boolean;\n  onClick?: () => void;\n  url?: string;\n};\n\n/**\n * This link component should handle every link throughout the app.\n * It accepts any valid React Element as children. A particular filling effect will be enabled\n * by default if `newTab` (which loads the `url` link on a new window) is set to true.\n */\nexport const Link: React.SFC<Props> = ({ children, className, fillEffect, label, newTab, onClick, url }) => (\n  <a\n    className={cx(className, { 'ext-link': newTab && fillEffect })}\n    href={url}\n    aria-label={label}\n    rel={newTab! ? 'noreferrer noopener' : ''}\n    target={newTab! ? '_blank' : ''}\n    onClick={onClick}\n  >\n    {\n      (label && !children) ?\n        label :\n        children\n    }\n  </a>\n);\n\nLink.defaultProps = {\n  className: '',\n  fillEffect: true,\n  url: '#',\n};\n","import cx from 'classnames';\nimport * as React from 'react';\n\ninterface Props {\n  children: React.ReactNode;\n  big?: boolean;\n  spaceBottom?: 'small' | 'medium';\n}\n\n/**\n * This component should be used to display important descriptions.\n * The description can be conditionally enlarged with the `big` prop.\n */\nexport const Description: React.SFC<Props> = ({ big, children, spaceBottom }) => (\n  <p className={cx('', {\n      'is-size-5-mobile is-size-3-desktop': big,\n      'is-size-5-mobile is-size-4-desktop': !big,\n      'padding-bottom-small': spaceBottom === 'small',\n    })}\n  >\n    {children}\n  </p>\n);\n\nDescription.defaultProps = {\n  big: false,\n};\n","import * as React from 'react';\n\ninterface Props {\n  children: React.ReactNode;\n}\n\n/**\n * This component should be used to display brief and not crucial text.\n */\nexport const Overview: React.SFC<Props> = ({ children }) => (\n  <p className=\"brief\">\n    {children}\n  </p>\n);\n","import cx from 'classnames';\nimport * as React from 'react';\n\ninterface Props {\n  big?: boolean;\n  children: React.ReactNode;\n  code?: boolean;\n}\n\n/**\n * This component should be used to display subtitles. Since the subtitle is read\n * from `props.children`, it can be either a string or a React Component.\n * The subtitle can be conditionally enlarged with the `big` prop.\n * If you need to display code, just pass the `code` prop.\n */\nexport const SubTitle: React.SFC<Props> = ({ big, code, children }) => (\n  <h3 className={cx('subtitle', {\n        'is-code': code,\n        'is-size-3-desktop is-size-4-mobile': big,\n        'is-size-4-desktop is-size-5-mobile': !big,\n      })}\n  >\n    {children}\n  </h3>\n);\n\nSubTitle.defaultProps = {\n  big: false,\n  code: false,\n};\n","import cx from 'classnames';\nimport * as React from 'react';\n\ninterface Props {\n  children: React.ReactNode;\n  big?: boolean;\n  center?: boolean;\n}\n\n/**\n * This component should be used to display titles. Since the title is read\n * from `props.children`, it can be either a string or a React Component.\n * The title can be conditionally enlarged with the `big` prop and centered\n * via the `center` prop.\n */\nexport const Title: React.SFC<Props> = ({ big, center, children }) => (\n  <h1 className={cx('title', {\n      'has-text-centered': center,\n      'is-size-3-mobile is-size-1-desktop': big,\n      'is-size-4-mobile is-size-2-desktop': !big,\n    })}\n  >\n    {children}\n  </h1>\n);\n\nTitle.defaultProps = {\n  big: false,\n  center: false,\n};\n","/**\n * Returns the `arr.reduce()` callback for `joinAnd()`.\n * \n * @param arr\n * @param separator\n */\nexport function join<T>(arr: T[], separator = ','): Array<T|string> {\n  return (\n    arr.reduce((acc, curr) => {\n      acc = acc.concat([curr, separator]);\n\n      return acc;\n    }, [] as Array<T|string>)\n  )\n};\n\n/**\n * Given an array of possibly mixed items, it returns a new array with the same elements\n * separated by comma (by default), except the last one, which has an `end` conjunction.\n * \n * @param arr\n * @param separator defaults to `, ` (note the space!) \n * @param and defaults to `and` (without spaces)\n */\nexport function joinAnd<T>(arr: T[], separator = ', ', and = 'and'): Array<T|string> {\n  const last = arr.length - 1;\n  const arrWithoutLast = arr.slice(0, last);\n  const joinedArrWithoutLast = join(arrWithoutLast, separator);\n  const spacedAnd = ` ${and} `;\n  joinedArrWithoutLast.pop(); // removes last ', '\n\n  return joinedArrWithoutLast.concat([\n    spacedAnd,\n    arr[last],\n  ]);\n}\n\n/**\n * Builds an email address on the fly, given an author and a provider.\n * This is done in order to avoid an excessive amount of web crawlers from\n * getting the email.\n * @param author The complete name of the author, in the form `name.surname`\n * @param provider In the form `gmail.com`, `yahoo.it` etc\n */\nexport function buildEmailAddress(author: string, provider: string) {\n  const prefix = author.split(' ').join('.').toLowerCase();\n\n  return `${prefix}@${provider}`;\n}\n","import * as React from 'react';\nimport { Link } from '../../components/Link';\nimport { Overview } from '../../components/Text';\nimport { joinAnd } from '../../helpers';\nimport './Footer.css';\n\ninterface Props {\n\tauthor: string;\n\ttechStack: string[];\n\turl: string;\n}\n\nexport const Footer: React.SFC<Props> = ({ author, techStack, url }) => {\n\tconst TechStackElements = techStack!.map((techName) => (\n\t\t<strong key={techName}>{techName}</strong>\n\t));\n\tconst joinedTechStackElements = joinAnd(TechStackElements, ', ', 'and');\n\n\treturn (\n\t  <footer className=\"footer\">\n\t\t\t<div className=\"content has-text-centered\">\n\t\t\t\t<Overview>\n\t\t\t\t\t{\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t'Built using ',\n\t\t\t\t\t\t\t...joinedTechStackElements,\n\t\t\t\t\t\t\t' by ',\n\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\tkey={author}\n\t\t\t\t\t\t\t\tnewTab\n\t\t\t\t\t\t\t\turl={url}\n\t\t\t\t\t\t\t\tlabel={author!}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t</Overview>\n\t\t\t\t<Overview>\n\t\t\t\t\tCopyright 2018\n\t\t\t\t</Overview>\n\t\t\t</div>\n\t\t</footer>\t\n\t);\n};\n","import * as React from 'react';\nimport { Link } from '../../components/Link';\nimport './Header.css';\n\ninterface Props {\n  ExternalElement: React.ReactNode;\n  Logo: React.ReactNode;\n  externalUrl: string;\n};\n\nexport const Header: React.SFC<Props> = ({ ExternalElement, Logo, externalUrl }) => (\n  <nav className=\"navbar has-shadow is-spaced is-fixed-top\">\n    <div className=\"container is-fluid\">\n      <div className=\"navbar-brand\">\n        <Link\n          className=\"navbar-item\"\n          label=\"Brand logo\"\n        >\n          {Logo}\n        </Link>\n      </div>\n      <div className=\"ext-icon-container\">\n        <div className=\"navbar-item has-text-centered\">\n          <Link\n            newTab\n            className=\"navbar-item\"\n            label=\"External site logo\"\n            url={externalUrl}\n          >\n            {ExternalElement}\n          </Link>\n        </div>\n      </div>      \n    </div>\n  </nav>\n);\n","import * as React from 'react';\n\ninterface Props {\n  color: string;\n};\n\nexport const GithubLogo: React.SFC<Props> = ({ color }) => (\n  <svg\n    className=\"github-logo\"\n    color={color}\n    viewBox=\"0 0 16 16\"\n    aria-hidden=\"true\"\n    width=\"1em\"\n    height=\"1em\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0 0 16 8c0-4.42-3.58-8-8-8z\"\n    />\n  </svg>\n);\n","import * as React from 'react';\n\ninterface Props {\n  color: string;\n};\n\nexport const Logo: React.SFC<Props> = ({ color }) => (\n  <svg className=\"logo\" viewBox=\"-5 -5 1000 100\">\n    <path fill=\"transparent\" d=\"M-1-1h650v93H-1z\" />\n    <g>\n      <g textAnchor=\"middle\">\n        <g fontWeight={500} fontSize={72} fontFamily=\"Raleway Medium Alt1\">\n          <path fill={color} d=\"M11.342 71.303L8.976 78.81c4.32 3.086 9.669 4.526 15.84 4.526 5.554 0 9.874-.823 13.166-2.674 3.291-1.749 5.76-4.217 7.508-7.509 1.749-3.188 2.88-7.097 3.395-11.623.514-4.525.822-9.668.822-15.222V9.177H40.45V46.31c0 4.731-.205 8.845-.514 12.342-.411 3.6-1.131 6.583-2.16 9.052-1.029 2.468-2.571 4.217-4.629 5.451-2.057 1.235-4.834 1.852-8.331 1.852-2.983 0-5.657-.309-7.92-1.132-2.366-.72-4.217-1.543-5.554-2.571zM96.992 9.28h-9.257v38.263l9.257-9.977V9.28zM115.3 41.371l29.315-32.194h-9.978L96.992 49.6l-9.257 9.874v22.732h9.257v-22.32l12.651-13.166 26.537 35.486h10.08L115.3 41.37zM226.655 49.703c-.309 2.16-.72 4.32-1.44 6.377-1.132 3.497-2.777 6.583-4.937 9.257-2.16 2.674-4.835 4.937-7.817 6.583-3.189 1.646-6.686 2.469-10.492 2.469-3.806 0-7.2-.72-10.286-2.366a23.85 23.85 0 0 1-7.92-6.377c-2.262-2.675-3.908-5.657-5.142-9.155a36.237 36.237 0 0 1-1.543-6.788h-9.36c.308 3.291 1.028 6.583 2.263 9.668 1.542 4.526 3.908 8.435 6.994 11.932 2.983 3.497 6.583 6.274 10.8 8.331 4.217 2.057 8.948 3.086 14.091 3.086 4.937 0 9.463-.926 13.68-2.983 4.217-2.057 7.817-4.731 10.903-8.126 3.086-3.394 5.452-7.302 7.2-11.828 1.234-3.189 2.057-6.583 2.469-10.08h-9.463zM178.62 35.2c1.131-3.394 2.777-6.377 4.937-9.154 2.16-2.675 4.834-4.835 7.92-6.48 3.085-1.646 6.583-2.469 10.491-2.469 3.6 0 6.994.823 10.08 2.366 3.086 1.646 5.657 3.703 7.92 6.377s3.909 5.657 5.143 9.154c.617 1.852 1.131 3.806 1.44 5.657h9.36a46.95 46.95 0 0 0-2.057-8.331c-1.646-4.423-4.012-8.331-6.994-11.931-3.086-3.498-6.686-6.275-10.8-8.435-4.218-2.16-8.949-3.291-13.989-3.291-5.04 0-9.566 1.028-13.783 3.086-4.217 2.057-7.817 4.731-10.903 8.125-3.085 3.497-5.554 7.406-7.303 11.829-1.13 2.983-1.954 5.966-2.262 8.948h9.36c.308-1.748.822-3.6 1.44-5.451zM270.614 9.177v73.029h9.257V25.737l16.354 29.212 4.938-8.435-20.778-37.337h-9.771zm72.514 0l-26.537 47.417-4.834 8.435 2.263 4.011h5.245l24.275-43.303v56.469h9.257V9.177h-9.669zM374.436 9.177l22.731 38.057 4.732-8.125-17.28-29.932h-10.183zm54.617 0l-22.32 38.057-4.628 8.332v26.64h9.257v-26.64l27.771-46.389h-10.08zM470.57 82.206h9.257v-41.04l-9.258-12.035v53.075zM523.026 9.28v56.777l-45.258-56.88h-7.2v5.554l9.258 11.726 44.64 55.749h7.817V9.28h-9.257zM625.561 49.703c-.308 2.16-.72 4.32-1.44 6.377-1.131 3.497-2.777 6.583-4.937 9.257-2.16 2.674-4.834 4.937-7.817 6.583-3.189 1.646-6.686 2.469-10.492 2.469-3.805 0-7.2-.72-10.285-2.366a23.85 23.85 0 0 1-7.92-6.377c-2.263-2.675-3.909-5.657-5.143-9.155a36.238 36.238 0 0 1-1.543-6.788h-9.36c.309 3.291 1.029 6.583 2.263 9.668 1.543 4.526 3.909 8.435 6.994 11.932 2.983 3.497 6.583 6.274 10.8 8.331 4.217 2.057 8.949 3.086 14.092 3.086 4.937 0 9.463-.926 13.68-2.983 4.217-2.057 7.817-4.731 10.902-8.126 3.086-3.394 5.452-7.302 7.2-11.828 1.235-3.189 2.058-6.583 2.47-10.08h-9.464zM577.527 35.2c1.131-3.394 2.777-6.377 4.937-9.154 2.16-2.675 4.834-4.835 7.92-6.48 3.086-1.646 6.583-2.469 10.491-2.469 3.6 0 6.995.823 10.08 2.366 3.086 1.646 5.658 3.703 7.92 6.377 2.263 2.674 3.91 5.657 5.143 9.154.617 1.852 1.132 3.806 1.44 5.657h9.36a46.952 46.952 0 0 0-2.057-8.331c-1.646-4.423-4.011-8.331-6.994-11.931-3.086-3.498-6.686-6.275-10.8-8.435-4.217-2.16-8.949-3.291-13.989-3.291-5.04 0-9.565 1.028-13.783 3.086-4.217 2.057-7.817 4.731-10.902 8.125-3.086 3.497-5.555 7.406-7.303 11.829-1.132 2.983-1.955 5.966-2.263 8.948h9.36c.309-1.748.823-3.6 1.44-5.451z\" />\n        </g>\n      </g>\n    </g>\n  </svg>\n);\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { InfoContext, InfoContextType } from '../../context';\nimport { Content, Footer, Header } from '../../layouts';\nimport { GithubLogo } from './GithubLogo';\nimport { Logo } from './Logo';\n\ninterface Props {\n  children: React.ReactNode;\n  color: string;\n  headerElement: Element;\n};\n\nexport const LayoutShell: React.SFC<Props> = ({ children, color, headerElement }) => {\n  const BrandElement = <Logo color={color} />;\n  const ExternalElement = (\n    <span className=\"icon\">\n      <GithubLogo color=\"#282828\" />\n    </span>\n  );\n\n  const renderHeader = (context: InfoContextType ) => (\n    <Header\n      Logo={BrandElement}\n      ExternalElement={ExternalElement}\n      externalUrl={context.repository}\n    />\n  );\n\n  const renderFooter = ({ author, authorUrl, techStack }: InfoContextType) => (\n    <Footer\n      author={author}\n      url={authorUrl}\n      techStack={techStack}\n    />\n  );\n\n  const HeaderComponent = (\n    <InfoContext.Consumer>\n      {renderHeader}      \n    </InfoContext.Consumer>\n  );\n  const Portal = ReactDOM.createPortal(HeaderComponent, headerElement);\n\n  return (\n    <>\n      {Portal}\n      <Content>\n        {children}\n      </Content>\n      <InfoContext.Consumer>\n        {renderFooter}        \n      </InfoContext.Consumer>\n    </>    \n  );\n};\n","import * as React from 'react';\n\ninterface Props {\n  children: React.ReactNode;\n  className?: string;\n}\n\nexport const Column: React.SFC<Props> = ({ children, className }) => (\n  <div className={`column ${className}`}>\n    {children}\n  </div>\n);\n\nColumn.defaultProps = {\n  className: '',\n};\n","import * as React from 'react';\nimport { Column } from '../../components/Column';\nimport { Link } from '../Link';\nimport './ActionButton.css';\n\nexport const ArrowRight: React.SFC<{}> = () => (\n  <svg\n    viewBox=\"0 0 453.5 270\"\n    width=\"2em\"\n  >\n    <g stroke=\"color\">\n      <path\n        id=\"arrow-head\"\n        fill=\"none\"\n        strokeWidth={20}\n        d=\"M318.5 10l125 125-125 125\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <path\n        id=\"arrow-body\"\n        strokeMiterlimit={0}\n        d=\"M433 144.5H10a10 10 0 0 1 0-20h423a10 10 0 0 1 0 20z\"\n      />\n    </g>\n  </svg>\n);\n\ninterface Props {\n  message: string;\n  onClick: () => void;\n  url: string;\n}\n\nexport const ActionButton: React.SFC<Props> = ({ message, onClick, url }) => (\n  <Column>\n    <div className=\"box action-button-container has-text-centered\">\n      <Link\n        className=\"button action-button is-size-3 is-size-6-mobile\"\n        fillEffect={false}\n        label={message}\n        onClick={onClick}\n        url={url}\n      >\n        {message} <ArrowRight />\n      </Link>\n    </div>\n  </Column>\n);\n","import * as React from 'react';\nimport MatrixText from 'react-matrix-text';\nimport './Matrix.css';\n\nconst renderColumn = (char: string) => (\n  <span\n    key={char}\n    className=\"matrix-column\"\n  >\n    {char}\n  </span>\n);\n\nconst renderRow = (columns: JSX.Element[]) => (\n  <div className=\"is-flex has-text-centered is-size-4-mobile is-size-3-tablet is-size-2-desktop\">\n    {columns}\n  </div>\n);\n\ninterface Props {\n  columns: number,\n  sentence: string\n};\n\nexport const Matrix: React.SFC<Props> = ({ columns, sentence}) => (\n  <div className=\"matrix-brackets\">\n    <div className=\"matrix-wrapper is-uppercase\">\n      <MatrixText\n        sentence={sentence}\n        columns={columns}\n        renderColumn={renderColumn}\n        renderRow={renderRow}\n      />\n    </div>\n  </div>\n);\n","import * as React from 'react';\nimport { Title } from '../../components/Text';\n\ninterface Props {\n  className?: string;\n  children?: React.ReactNode;\n  section?: string;\n  hideTitle?: boolean;\n};\n\nexport const Section: React.SFC<Props> = ({ children, className, hideTitle, section }) => (\n  <section className={`section${className ? ` ${className}` : ''}`}>\n    <div className=\"container\">\n      {!hideTitle && section && <Title>{section}</Title>}\n      {children}\n    </div>\n  </section>\n);\n\nSection.defaultProps = {\n  className: '',\n  hideTitle: false,\n};\n","import * as React from 'react';\nimport { ActionButton } from '../../components/ActionButton';\nimport { Matrix } from '../../components/Matrix';\nimport { Section } from '../../components/Section';\nimport { SubTitle, Title } from '../../components/Text';\nimport { InfoContext, InfoContextType } from '../../context';\n\nexport const Hero: React.SFC<{}> = () => {\n  const salute = `Hi, my name is`;\n  const subtitle = `and I'm a`;\n  const matrixText = `Software engineer`;\n\n  const standup = `I like tackling problems with creative solutions,\n  crafting testable code for front-end and back-end.`;\n\n  const renderAuthorInfo = ({ author, nickname }: InfoContextType ) => (\n    <>\n      <Title big>{author}</Title>\n      <SubTitle code>{`/* @${nickname} */`}</SubTitle>\n    </>\n  );\n\n  const AuthorInfoComponent = (\n    <InfoContext.Consumer>\n      {renderAuthorInfo}        \n    </InfoContext.Consumer>\n  );\n\n  const renderActionButton = ({ resumeUrl, onResumeDownloaded }: InfoContextType) => (\n    <ActionButton\n      message=\"Get my resume\"\n      onClick={onResumeDownloaded}\n      url={resumeUrl}\n    />\n  );\n\n  const ActionButtonComponent = (\n    <InfoContext.Consumer>\n      {renderActionButton}\n    </InfoContext.Consumer>\n  )\n\n  return (\n    <Section hideTitle section=\"Hero\" className=\"hero\">\n      <div className=\"has-text-centered\">\n        <SubTitle big>{salute}</SubTitle>\n        {AuthorInfoComponent}\n        <SubTitle>{subtitle}</SubTitle>\n      </div>\n      <Matrix\n        columns={4}\n        sentence={matrixText}\n      />\n      <Title center={true}>{standup}</Title>\n      {ActionButtonComponent}\n    </Section>\n  );\n};\n","import * as React from 'react';\nimport { Link } from '../../components/Link';\nimport { Section } from '../../components/Section';\nimport { Description } from '../../components/Text';\nimport { InfoContext, InfoContextType } from '../../context';\n\nexport const Opportunities: React.SFC<{ email: string }> = ({ email }) => {\n  const opportunities = {\n    drop: `Drop me an `,\n    email: <Link newTab label=\"email\" url={`mailto:${email}`} />,\n    new: `for new opportunities.`,\n  };\n\n  return (\n    <Description>{opportunities.drop} {opportunities.email} {opportunities.new}</Description>\n  );\n};\n\nexport const About: React.SFC<{}> = () => {\n  const links = {\n    androidiani: <Link newTab label=\"Androidiani\" url=\"http://www.androidiani.com\" />,\n    brainwise: <Link newTab label=\"Brainwise\" url=\"https://brainwise.it\" />,\n    skydreamer: <Link newTab label=\"Skydreamer\" url=\"https://www.crunchbase.com/organization/skydreamer\" />,\n    autoencoders: <Link newTab label=\"convolutional Autoencoders\"\n                    url=\"https://colab.research.google.com/drive/1VUeii7JAw11bRAXwhtpWDc0DoXhwzdGF\"\n                  />,\n  }\n  const experience = {\n    onSite: `as well as on-site`,\n    remote: `I have experience in working with remote-only teams`,\n  };\n  const study = `I'm a Master's student graduating in Computer Science at the University of\n                Padova. I graduated with a Bachelor's Degree in Computer Science in 2019.`;\n\n  const self = `I'm curious and passionate about functional programming,\n                NP-hard algorithms approximations and software engineering best practices.`;\n\n  const ai = `I'm currently studying and strengthening my skills in Machine Learning.\n              I'm particularly interested in`;\n\n  const renderOpportunities = ({ authorEmail }: InfoContextType) => (\n    <Opportunities email={authorEmail} />\n  );\n\n  return (\n    <Section section=\"About\" className=\"about\">\n      <Description spaceBottom=\"small\">{study}</Description>\n      <Description>{self}</Description>\n      <Description spaceBottom=\"small\">\n        {experience.remote} ({links.skydreamer}, {links.androidiani}) {experience.onSite} ({links.brainwise}).\n      </Description>\n\n      <Description>\n        {ai} {links.autoencoders} {'.'}\n      </Description>\n\n      <hr />\n      <InfoContext.Consumer>\n        {renderOpportunities}\n      </InfoContext.Consumer>\n    </Section>\n  );\n};\n","import * as React from 'react';\nimport { Link } from '../../components/Link';\nimport { Section } from '../../components/Section';\n\nexport interface ProfileLink {\n  link: string,\n  className: string,\n  platformTitle: string,\n};\n\ninterface Props {\n  links: ProfileLink[],\n};\n\nexport class Profiles extends React.PureComponent<Props> {\n  public render() {\n    const renderedLinks = this.renderLinks();\n\n    return (\n      <Section section=\"Profiles\" className=\"profiles\">\n        <div className=\"buttons is-centered\">\n          {renderedLinks}\n        </div>\n      </Section>\n    );\n  }\n\n  private renderLink = ({ link, className, platformTitle }: ProfileLink): JSX.Element => (\n    <Link\n      newTab={true}\n      label={platformTitle}\n      url={link}\n      key={platformTitle}\n      className={`button is-outlined is-size-4-desktop is-size-6-mobile ${className}`}\n    >\n      {platformTitle}\n    </Link>\n  )\n\n  private renderLinks = (): JSX.Element[] => (\n    this.props.links.map(this.renderLink)\n  )\n};\n","import * as React from 'react';\nimport { Section } from '../../components/Section';\nimport './Skills.css';\n\ninterface Props {\n  leftSkills: string[],\n  rightSkills: string[]\n};\n\nexport class Skills extends React.PureComponent<Props> {\n  renderLeftSkills = () => (\n    this.props.leftSkills.map(leftSkill => (\n      <div key={leftSkill} className=\"skill-row is-flex has-text-centered\">\n        <div className=\"left text\">{leftSkill}</div>\n        <div className=\"rect\"/>\n      </div>\n    ))\n  );\n\n  renderRightSkills = () => (\n    this.props.rightSkills.map(rightSkill => (\n      <div key={rightSkill} className=\"skill-row is-flex has-text-centered\">\n        <div className=\"rect\"/>\n        <div className=\"right text\">{rightSkill}</div>\n      </div>\n    ))\n  );\n  \n  render() {\n    return (\n      <Section section=\"Skills\" className=\"skills\">\n        <div className=\"card\">\n          <div className=\"card-content\">\n            {this.renderLeftSkills()}\n            {this.renderRightSkills()}\n          </div>\n        </div>\n      </Section>\n    );\n  }\n};\n","import * as React from 'react';\nimport * as ReactGA from 'react-ga';\nimport { AnimatedWrapper } from '../components/AnimatedWrapper';\nimport { LayoutShell } from '../components/LayoutShell';\nimport { InfoContext, InfoContextType } from '../context';\nimport { buildEmailAddress } from '../helpers';\nimport { About, Hero, Profiles, Skills } from '../pages';\nimport { ProfileLink } from '../pages/Profiles';\n\nReactGA.initialize('UA-126612593-1');\n\nexport class App extends React.PureComponent {\n\n  public componentDidMount() {\n    ReactGA.pageview('/home');\n  }\n\n  public render() {\n    return (\n      <InfoContext.Provider value={this.info}>\n        <LayoutShell color=\"#34AAFF\" headerElement={this.headerElement!}>\n          <AnimatedWrapper>\n            <Hero />\n            <About />\n            <Skills\n              leftSkills={this.leftSkills}\n              rightSkills={this.rightSkills}\n            />\n          </AnimatedWrapper>\n          <Profiles links={this.profileLinks} />\n        </LayoutShell>\n      </InfoContext.Provider>\n    );\n  }\n\n  private onResumeDownloaded() {\n    ReactGA.event({\n      action: 'Downloaded Resume',\n      category: 'Promotion',\n    });\n  }\n\n  private get headerElement() {\n    return document.getElementById('header-root');\n  }\n\n  private get info(): InfoContextType {\n    const author = 'Alberto Schiabel';\n    const nickname = 'jkomyno';\n    const authorUrl = `https://github.com/${nickname}`;\n    const repository = `${authorUrl}/jkomyno.github.io`;\n    const resumeUrl = `${repository}/raw/master/resume-Alberto_Schiabel.pdf`\n\n    return {\n      author,\n      authorEmail: buildEmailAddress(author, 'gmail.com'),\n      authorUrl,\n      nickname,\n      onResumeDownloaded: this.onResumeDownloaded,\n      repository,\n      resumeUrl,\n      techStack: [\n        'ReactJS',\n        'Bulma',\n        'SCSS'\n      ],\n    };\n  }\n\n  private get leftSkills(): string[] {\n    return [\n      'ReactJS',\n      'NodeJS',\n      'TypeScript',\n      'Python3',\n      'Terraform'\n    ];\n  }\n\n  private get rightSkills(): string[] {\n    return [\n      'Golang',\n      'C++14',\n      'SQL',\n      'AWS',\n      'Docker'\n    ];\n  }\n\n  private get profileLinks(): ProfileLink[] {\n    return [\n      {\n        className: 'github',\n        link: 'https://github.com/jkomyno',\n        platformTitle: 'Github',\n      },\n      {\n        className: 'medium',\n        link: 'https://medium.com/@alberto.schiabel',\n        platformTitle: 'Medium',\n      },\n      {\n        className: 'stackoverflow',\n        link: 'https://stackoverflow.com/users/6174476/alberto-schiabel',\n        platformTitle: 'StackOverflow',\n      },\n      {\n        className: 'linkedin',\n        link: 'https://www.linkedin.com/in/alberto-schiabel-a21262132/',\n        platformTitle: 'Linkedin',\n      },\n      {\n        className: 'npm',\n        link: 'https://www.npmjs.com/~jkomyno',\n        platformTitle: 'Npm',\n      },\n      {\n        className: 'codepen',\n        link: 'https://codepen.io/jkomyno',\n        platformTitle: 'Codepen',\n      }\n    ];\n  }\n}\n","// tslint:disable:no-console\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the 'N+1' visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL!,\n      window.location.toString()\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker) {\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the old content will have been purged and\n                // the fresh content will have been added to the cache.\n                // It's the perfect time to display a 'New content is\n                // available; please refresh.' message in your web app.\n                console.log('New content is available; please refresh.');\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // 'Content is cached for offline use.' message.\n                console.log('Content is cached for offline use.');\n              }\n            }\n          };\n        }\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type')!.indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { App } from './containers/App';\nimport './index.css';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root') as HTMLElement\n);\nregisterServiceWorker();\n"],"sourceRoot":""}